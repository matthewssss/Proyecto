<?php
require_once '../../Padres/Models/Padre.php';

class Asociado {
    private $id_ins;
    private $id_usr;
    private $nombre;
    private $apellidos;
    private $DNI;
    private $fecha_nacimiento;
    private $edad;
    private $unidad;
    private $cp;
    private $municipio;
    private $provincia;
    private $comunidad_autonoma;
    private $padre;

    public function __construct(array $data) {
        $this->id_ins = $data['id_ins'];
        $this->id_usr = $data['id_usr'];
        $this->nombre = $data['nombre'];
        $this->apellidos = $data['apellidos'];
        $this->DNI = $data['DNI'];
        $this->fecha_nacimiento = $data['fecha_nacimiento'];
        $this->edad = $data['edad'];
        $this->unidad = $data['unidad'];
        $this->cp = $data['cp'];
        $this->municipio = $data['municipio'];
        $this->provincia = $data['provincia'];
        $this->comunidad_autonoma = $data['comunidad_autonoma'];
        $this->padre = new Padre($data);
    }

    // Getters
    public function getIdIns() {
        return $this->id_ins;
    }

    public function getIdUsr() {
        return $this->id_usr;
    }

    public function getNombre() {
        return $this->nombre;
    }

    public function getApellidos() {
        return $this->apellidos;
    }

    public function getDNI() {
        return $this->DNI;
    }

    public function getFechaNacimiento() {
        return $this->fecha_nacimiento;
    }

    public function getEdad() {
        return $this->edad;
    }

    public function getUnidad() {
        return $this->unidad;
    }

    public function getCp() {
        return $this->cp;
    }

    public function getMunicipio() {
        return $this->municipio;
    }

    public function getProvincia() {
        return $this->provincia;
    }

    public function getComunidadAutonoma() {
        return $this->comunidad_autonoma;
    }

    // Setters
    public function setIdIns($id_ins) {
        $this->id_ins = $id_ins;
    }

    public function setIdUsr($id_usr) {
        $this->id_usr = $id_usr;
    }

    public function setNombre($nombre) {
        $this->nombre = $nombre;
    }

    public function setApellidos($apellidos) {
        $this->apellidos = $apellidos;
    }

    public function setDNI($DNI) {
        $this->DNI = $DNI;
    }

    public function setFechaNacimiento($fecha_nacimiento) {
        $this->fecha_nacimiento = $fecha_nacimiento;
    }

    public function setEdad($edad) {
        $this->edad = $edad;
    }

    public function setUnidad($unidad) {
        $this->unidad = $unidad;
    }

    public function setCp($cp) {
        $this->cp = $cp;
    }

    public function setMunicipio($municipio) {
        $this->municipio = $municipio;
    }

    public function setProvincia($provincia) {
        $this->provincia = $provincia;
    }

    public function setComunidadAutonoma($comunidad_autonoma) {
        $this->comunidad_autonoma = $comunidad_autonoma;
    }


    /* ****************************** */
    /*   PADRE SETTER Y GETTER        */
    /* ****************************** */
    // Getter for Padre object
    public function getPadre() {
        return $this->padre;
    }

    // Setter for Padre object
    public function setPadre(Padre $padre) {
        $this->padre = $padre;
    }

    // Convenience methods to access Padre properties directly
    public function getPadreId() {
        return $this->padre ? $this->padre->getId() : null;
    }

    public function getPadreNombre() {
        return $this->padre ? $this->padre->getNombre() : null;
    }

    public function getPadreApellidos() {
        return $this->padre ? $this->padre->getApellidos() : null;
    }

    public function getPadreCorreo() {
        return $this->padre ? $this->padre->getCorreo() : null;
    }

    public function getPadreTel() {
        return $this->padre ? $this->padre->getTel() : null;
    }

    public function getPadreEstadoCivil() {
        return $this->padre ? $this->padre->getEstadoCivil() : null;
    }

    public function getPadreDni() {
        return $this->padre ? $this->padre->getDni() : null;
    }


    function decryptField($encryptedField) {
        // Recoge la clave de cifrado desde el archivo .env (variable de entorno)
        $encryption_key = getenv('ENCRYPTION_KEY'); // Clave secreta almacenada en el entorno del servidor
        
        // Decodifica el texto cifrado desde Base64 a binario
        $data = base64_decode($encryptedField);
        
        // Obtiene la longitud del IV para saber cómo separar el IV del texto cifrado
        $iv_length = openssl_cipher_iv_length('aes-256-cbc');
        
        // Extrae el IV del principio de los datos (tamaño específico)
        $iv = substr($data, 0, $iv_length);
        
        // Extrae el texto cifrado del resto de los datos (después del IV)
        $encrypted_data = substr($data, $iv_length);
        
        // Desencripta el texto cifrado usando la clave y el IV
        return openssl_decrypt($encrypted_data, 'aes-256-cbc', $encryption_key, 0, $iv);
    }
}